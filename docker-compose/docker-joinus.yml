version: '2'
services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    networks:
      my-network:
    ports:
      - "15672:15672"
      - "5672:5672"
      - "15671:15671"
      - "5671:5671"
      - "4369:4369"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  config-service:
    image: refinedstone/config-service:1.0
    container_name: config-service
    networks:
      my-network:
    ports:
      - "8888:8888"
    environment:
      spring.rabbitmq.host: rabbitmq
  discovery-service:
    image: refinedstone/discovery-service:1.0
    container_name: discovery-service
    networks:
      my-network:
    ports:
      - "8761:8761"
    environment:
      spring.cloud.config.uri: "http://config-service:8888"
  apigate-service:
    image: refinedstone/apigate-service
    container_name: apigate-service
    networks:
      my-network:
    ports:
      - "8000:8000"
    environment:
      spring.cloud.config.uri: "http://config-service:8888"
      spring.rabbitmq.host: rabbitmq
      eureka.client.serviceUrl.defaultZone: "http://discovery-service:8761/eureka/"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      my-network:
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      my-network:
    ports:
      - "3000:3000"
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks:
      my-network:
    ports:
      - "9411:9411"
  main-service:
    image: refinedstone/main-service
    container_name: main-service
    networks:
      my-network:
    environment:
      spring.cloud.config.uri: "http://config-service:8888"
      spring.rabbitmq.host: rabbitmq
      eureka.client.serviceUrl.defaultZone: "http://discovery-service:8761/eureka/"
      spring.zipkin.base-url: "http://zipkin:9411"
      logging.file: "/api-logs/users-ws.log"
    depends_on:
      - apigate-service
      - discovery-service
      - zipkin
  chat-service:
    image: refinedstone/chat-service
    container_name: chat-service
    networks:
      my-network:
    environment:
      spring.cloud.config.uri: "http://config-service:8888"
      spring.rabbitmq.host: rabbitmq
      eureka.client.serviceUrl.defaultZone: "http://discovery-service:8761/eureka/"
      spring.zipkin.base-url: "http://zipkin:9411"
      logging.file: "/api-logs/users-ws.log"
    depends_on:
      - apigate-service
      - discovery-service
      - zipkin
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      my-network:
        ipv4_address: 172.18.0.100
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.101
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      my-network:
        ipv4_address: 172.18.0.101
  kafka-connect:
    image: cnfldemos/cp-server-connect-datagen:0.5.3-7.1.0
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    volumes:
      - ./mysql-connector:/usr/share/java/kafka
      - ./jdbc:/etc/kafka-connect/jars
    depends_on:
      - kafka
      - zookeeper
    networks:
      my-network:
        ipv4_address: 172.18.0.102

networks:
  my-network:
    name: joinus-network
    ipam:
      driver: bridge
      config:
        - subnet: 172.18.0.0/16